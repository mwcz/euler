#!/usr/bin/python

# Problem 27

# Euler published the remarkable quadratic formula:
# 
#     n^2 + n + 41
# 
# It turns out that the formula will produce 40 primes for the consecutive 
# values n = 0 to 39. However, when n = 40, 40^2 + 40 + 41 = 40(40 + 1) + 41 
# is divisible by 41, and certainly when n = 41, 41^2 + 41 + 41 is clearly 
# divisible by 41.
# 
# Using computers, the incredible formula  n^2 + 79n + 1601 was discovered, 
# which produces 80 primes for the consecutive values n = 0 to 79. The 
# product of the coefficients, 79 and 1601, is 126479.
# 
# Considering quadratics of the form:
# 
#     n^2 + an + b, where |a|  1000 and |b|  1000
# 
#                                             where |n| is the modulus/absolute 
#                                             value of n e.g. |11| = 11 and |4| = 4
# 
# Find the product of the coefficients, a and b, for the quadratic expression 
# that produces the maximum number of primes for consecutive values of n, starting 
# with n = 0.

from primes1m import primes
from itertools import count
from gmpy import is_prime

if __name__ == "__main__":

    f = lambda n,a,b: n**2 + a*n + b

    prime_count = 0 # to count consecutive primes
    max = [0,0,0] # [prime_count,a,b]

    for a in xrange(-999,1000):
        for b in xrange(-999,1000):
            for n in count():
                x = f( n,a,b )
                if is_prime( x ):
                    prime_count += 1
                else:
                    break
            if prime_count > max[0]:
                max = [ prime_count, a, b ]
                print("%d consecutive primes generated by n^2 + %dn + %d" % ( prime_count, a, b ) )
            prime_count = 0


