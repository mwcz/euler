const importObject = {
    imports: {
        imported_func: arg => console.log(arg)
    }
};

const app = new Vue({
  el: '#app',
  data: {
      message: 
      `<h1>Problem 2</h1>

<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>

<blockquote>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</blockquote>

<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>`,
    sum: ''
  }
})

fetch('./target/wasm32-unknown-unknown/debug/p2-for-wasm.wasm').then(response =>

  response.arrayBuffer()

).then(bytes =>

  WebAssembly.instantiate(bytes, importObject)

).then(results => {

    const sum = results.instance.exports.fibsum();
    app.sum = sum;

});

// WebAssembly.instantiateStreaming(fetch('./target/wasm32-unknown-unknown/release/p2-for-wasm.wasm'), importObject)
//     .then(obj => {
//         const sum = obj.instance.exports.fibsum();
//         app.sum = sum;
//     });
